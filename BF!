\ STM8eForth : BF!                                                 TG9541-200424
\ ------------------------------------------------------------------------------

\ Write bit to a bitfield stored in one or more cells (16 bit words)
\ Set/reset bit #u (0..8191) in a cell array starting at address a to bool t
: BF! ( b a n -- ) [
  \ Note: creates/executes BSER/BRES + RET code on Data Stack
  $9093 ,          \        LDW     Y,X
  $FE C,           \        LDW     X,(X)           ; get bit number
  $9F C,           \        LD      A,XL
  $88 C,           \        PUSH    A               ; keep LSB
  $54 C,           \        SRLW    X               ; 8 \ -> byte offset
  $54 C,           \        SRLW    X
  $54 C,           \        SRLW    X
  \ The next 3 lines are for Big-Endians, e.g. the designers of the STM8
  $9F C,           \        LD      A,XL            ; STM8: a Big Endian
  $A801 ,          \        XOR     A,#1
  $97 C,           \        LD      XL,A            ; now the MSB comes first
  $BF46 ,          \        LDW     YTEMP,X         ; bit offset
  $93 C,           \        LDW     X,Y
  $EE02 ,          \        LDW     X,(2,X)
  $72BB , $0046 ,  \        ADDW    X,YTEMP         ; bit offset + address
  $90EF , $02 C,   \        LDW     (2,Y),X
  $A672 ,          \        LD      A,#0x72         ; Opcode BSET/BRES
  $90F7 ,          \        LD      (Y),A
  $84 C,           \        POP     A               ; LSB of bit number
  $A407 ,          \        AND     A,#0x07
  $48 C,           \        SLA     A               ; n *= 2 -> A
  $AA10 ,          \        OR      A,#0x10
  $93 C,           \        LDW     X,Y
  $EE04 ,          \        LDW     X,(4,X)         ; bool b (0..15) -> Z
  $2601 ,          \        JRNE    1$              ; b!=0: BSET
  $4C C,           \        INC     A               ; b==0: BRES
  $93 C,           \ 1$:    LDW     X,Y
  $E701 ,          \        LD      (1,X),A         ; 2nd byte of BSET/BRES
  $A681 ,          \        LD      A,#EXIT_OPC     ; Opcode RET
  $E704 ,          \        LD      (4,X),A
  $1C C, $0006 ,   \        ADDW    X,#6
  $90FC ,          \        JP      (Y)
  OVERT

\\ Example

NVM
#require BF!
  VARIABLE bitfield 14 ALLOT   \ get an array with 8 cells
RAM

bitfield 16 0 FILL           \ set all bytes to zero
1 bitfield 48 BF!            \ set bit 48 (which is the LSB of the 4th cell)
bitfield 10 DUMP             \ dump bitfield
